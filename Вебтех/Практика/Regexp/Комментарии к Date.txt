    Рассмотрим регулярку 
        ^(((0[1-9]|[12]\\d).02)|((0[1-9]|[12]\\d|3[01])\\.(0[13578]|1[02]))|((0[1-9]|[12]\\d|30)\\.(0[469]|11)))\\.\\d{2} (1\\d|2[0-3]|0[1-9]):[0-5]\\d$
    С конца:
        (1\\d|2[0-3]|0[1-9]):[0-5]\\d
    У нас присутствует символ :, т.е должна быть форма текста чч:чч
    Смотрим на вторую часть
        [0-5]\\d
    Сначала регэкс смотрит по 1 числу, оно должно быть от 0 до 5. Т.к. в часу встречаются минуты от 00 до 59. 
    Раз есть 00, то можно оставить просто \\d - это вместо [0-9]. На месте \\d может стоять любая цифра.

    Смотрим на первую часть
        (1\\d|2[0-3]|0[1-9])
    В скобках у нас тройное ИЛИ, аргументы делятся символом |
    Т.е.
        Либо 1\\d - любое число от 10 до 19
        Либо 2[0-3] - от 20 до 23
        Либо же 0[1-9] - от 01 до 09
    Между правой и левой частью вставлен пробел.
    
    Теперь смотрим на левую часть
        (((0[1-9]|[12]\\d).02)|((0[1-9]|[12]\\d|3[01])\\.(0[13578]|1[02]))|((0[1-9]|[12]\\d|3[0])\\.(0[469]|11)))\\.\\d{2}
    Начинаем с конца
        \\.\\d{2}
    Это значит, что у нас может на этом месте быть конструкция .чч - эта часть отвечает за год.
    \\. - экранирование точки, иначе точка воспримется как "взять все символы", а нам она сама нужна как символ
    \\d{2} - конструкция с квантификатором. {2} значит, что нам нужно только 2 числа. Ни больше, ни меньше.
    В итоге на этом месте может стоять от .00 до .99
    Двигаемся дальше
        (((0[1-9]|[12]\\d).02)|((0[1-9]|[12]\\d|3[01])\\.(0[13578]|1[02]))|((0[1-9]|[12]\\d|3[0])\\.(0[469]|11)))
    Если присмотреться, то это снова конструкция ИЛИ. Редуцируем ее:
        (
            (   
                (...) \\.02
            )
            |  
            (
                (...|...|...) \\. (...|...)
            )
            |  
            (
                (...|...|...) \\. (...|...)
            )
        )
          
    Рассмотрим нижнюю конструкцию.
        ((0[1-9]|[12]\\d|30)\\.(0[469]|11))
    Возьмем правую часть
        \\.(0[469]|11)
    В конечном итоге это должно выглядеть как .04, .06, .09 или .11
    Что соответствует Апрелю, Июню, Сентябрю и Ноябрю - месяцам с 30 днями.
    
    Смотрим на условную конструкцию
        (0[469]|11)
    Правая часть должна быть уже понятна - это число 11.
    Левая часть интереснее.
        0[469]
    Первая цифра 0. Далее мы пишем именно так. Читается это как "Либо 4, либо 6, либо 9".
    Теперь возьмем выражение по левую сторону от точки.
        (0[1-9]|[12]\\d|30)
    Опять условное выражение.
    Левая часть понятна
        0[1-9]
    Число от 01 до 09.
    Средняя часть сравнима с правой.
        [12]\\d
    Первая цифра - либо 1, либо 2. Вторая - любая от 0 до 9.
    Число от 10 до 29.
    В правой части уже можно разобраться самому.
        30
    Итого нижняя конструкция представляет собой выражение, выбирающее день месяца от 01 до 30 для соответствующих месяцев.
    
      
    Рассмотрим среднюю конструкцию.
        ((0[1-9]|[12]\\d|3[01])\\.(0[13578]|1[02]))
    Возьмем правую часть
        \\.(0[13578]|1[02])
    В конечном итоге это должно выглядеть как .01, .03, .05, .07, .08, .10 или .12
    Это соответствует месяцам Январь, Март, Май, Июль, Август, Октябрь и Декабрь - месяцы с 31 днем.
    
    Смотрим на условную конструкцию
        0[13578]|1[02]
    Правая часть должна быть уже понятна - первая цифра это 1, вторая либо 0, либо 2.
    Левая часть должна быть понятна из разбора третьего выражения (было выше).
    
    Теперь возьмем выражение по левую сторону от точки.
        (0[1-9]|[12]\\d|3[01])
    Подобное условное выражение было в примере выше, за исключением правой части.
        3[01]
    Число от 30 до 31.
    Итого нижняя конструкция представляет собой выражение, выбирающее день месяца от 01 до 31 для соответствующих месяцев.
    
    Наконец, рассматриваем верхнюю часть
        ((0[1-9]|[12]\\d).02)
    Из рассмотренных выше примеров должно быть понятно, что она делает.
    Выбирает часть из текста, подходящая под описание чч.02, где чч принимает значения от 01 до 29.
    
    Последнее - якори. ^ в начале регэкса показывает, что в подходящая строка должна находиться в начале текста. $ - что в конце. Итого
    Наше выражение ^()$ показывает, что в тексте должна быть только одна дата типа дд.мм.гг чч:мм без всяких слов, знаков и пробелов
    в начале и конце.